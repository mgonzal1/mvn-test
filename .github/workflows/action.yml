# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history and tags

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven


    #Static analysis is not enforced to pass at this time;
    # only generating the report for review.
    - name: Generate static analysis  report
      run: mvn site
    
    - name: Upload report
      uses: actions/upload-artifact@v4
      with:
        name: dpm-report
        path: target/site

    - name: Build with Maven
      run: mvn -B package --file pom.xml


    - name: Upload JAR file
      uses: actions/upload-artifact@v4
      with:
        name: dpm-artifact
        path: target/*.jar

    - name: Get Latest Tag
      id: get_tag
      run: |
        TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "LATEST_TAG=$TAG" >> $GITHUB_ENV

    - name: Increment Version
      id: increment_version
      run: |
        TAG=${{ env.LATEST_TAG }}
        IFS='.' read -r -a parts <<< "$TAG"
        major=${parts[0]#v}
        minor=${parts[1]}
        patch=${parts[2]}
        patch=$((patch + 1))
        NEW_VERSION="v$major.$minor.$patch"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Create New Git Tag
      id: create_tag
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git tag ${{ env.NEW_VERSION }}
        git push origin ${{ env.NEW_VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      run: gh release create ${{ env.NEW_VERSION }} ./target/data-pool-manager*.jar
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
