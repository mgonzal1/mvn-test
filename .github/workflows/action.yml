# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  issues:
    types: [opened, reopened, closed, deleted]
  issue_comment:
    types: [created, deleted]  
#  schedule:
#    - cron: "13 22 * * *"   # <=== One time in a day at 6 PM

#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: List files
      run: ls -la
  
    - name: Upload JAR file
      uses: actions/upload-artifact@v4
      with:
        name: dpm-artifact
        path: target/*.jar

    - name: Get Current Version
      id: get_version
      run: |
        if [ -f version.txt ]; then
          VERSION=$(cat version.txt)
        else
          VERSION="v1.0.0"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Increment Version
      id: increment_version
      run: |
        VERSION=${{ env.VERSION }}
        IFS='.' read -r -a parts <<< "$VERSION"
        major=${parts[0]#v}
        minor=${parts[1]}
        patch=${parts[2]}
        patch=$((patch + 1))
        NEW_VERSION="v$major.$minor.$patch"
        echo "$NEW_VERSION" > version.txt
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      with:
        tag_name: ${{ env.NEW_VERSION }}
        release_name: Release ${{ env.NEW_VERSION }}
        body: 'Release of JAR file.'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1.1.4
    #   with:
    #       tag_name: v1.0.0
    #       release_name: Release v1.1.1
    #       # body: 'Release of JAR file.'
    #   env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Download JAR file
      uses: actions/download-artifact@v4
      with:
        name: dpm-artifact
    
    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1.0.2
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/data-pool-manager-maven-1.0-SNAPSHOT.jar
          asset_name: DPM.jar
          asset_content_type: application/java-archive
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
