# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: DPM CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - dpm_dockerbuild

env:
  DPM_RELEASE: 'v12-PVA'

# This is for optimization, it will cancel the job if there is a new change within the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history and tags

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    #Static analysis is not enforced to pass at this time;
    # only generating the report for review.
    - name: Generate static analysis  report
      run: mvn site
    
    - name: Upload report
      uses: actions/upload-artifact@v4
      with:
        name: dpm-report
        path: target/site

    - name: Build and UT with Maven
      run: mvn -B package --file pom.xml

    - name: List Files
      run: |
        echo "Where am I?"
        ls -tlrha
        pwd
        env
        echo "----"
        echo $GITHUB_WORKSPACE

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
          images: adregistry.fnal.gov/acorn/dpm
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ env.DPM_RELEASE }}
  
    - name: Log in to Docker Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: adregistry.fnal.gov
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Build and push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: adregistry.fnal.gov/acorn/dpm:${{ env.DPM_RELEASE }}
        build-args: |
          DPM_RELEASE=${{ env.DPM_RELEASE }}
        labels: ${{ steps.meta.outputs.labels }}

